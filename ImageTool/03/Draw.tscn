[gd_scene load_steps=7 format=2]

[ext_resource path="res://ImageTool/03/draw.gd" type="Script" id=1]
[ext_resource path="res://ImageTool/03/pen.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_premul_alpha,unshaded;

uniform vec4 color:hint_color;

uniform float angle = 0.0;

vec2 customRotator(vec2 UVs,vec2 RotationCenter,float RotationAngle){
    //自定义旋转
    //RotationAngle为旋转输入0-1个值。值为1等于360度转弯。
    //RotationCenter输入一个数字作为旋转中心点。
    //UVs插入uv，世界坐标或其他值来旋转。
    vec2 _uv = UVs + RotationCenter * -1.0;
    float angle_cos = cos(RotationAngle);
    float angle_sin = sin(RotationAngle);
    vec2 _a = vec2(angle_cos, angle_sin * -1.0);
    vec2 _b = vec2(angle_sin, angle_cos);

    return vec2(dot(_uv, _a), dot(_uv, _b)) + RotationCenter;
}

void fragment(){
	vec2 uv_ = customRotator(UV, vec2(0.5,0.5), angle);
	COLOR = texture(TEXTURE,uv_) * color;
	COLOR.a = 0.0;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color = null
shader_param/angle = 0.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec4 color:hint_color;

uniform float angle = 0.0;

vec2 customRotator(vec2 UVs,vec2 RotationCenter,float RotationAngle){
    //自定义旋转
    //RotationAngle为旋转输入0-1个值。值为1等于360度转弯。
    //RotationCenter输入一个数字作为旋转中心点。
    //UVs插入uv，世界坐标或其他值来旋转。
    vec2 _uv = UVs + RotationCenter * -1.0;
    float angle_cos = cos(RotationAngle);
    float angle_sin = sin(RotationAngle);
    vec2 _a = vec2(angle_cos, angle_sin * -1.0);
    vec2 _b = vec2(angle_sin, angle_cos);

    return vec2(dot(_uv, _a), dot(_uv, _b)) + RotationCenter;
}

void fragment(){
	vec2 uv_ = customRotator(UV, vec2(0.5,0.5), angle);
	COLOR = texture(TEXTURE,uv_) * color;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/color = null
shader_param/angle = 0.0

[node name="Draw" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 512, 512 )
transparent_bg = true
hdr = false
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="Drawing" type="TextureRect" parent="Viewport"]
material = SubResource( 2 )
margin_right = 512.0
margin_bottom = 512.0
texture = ExtResource( 2 )
expand = true

[node name="Drawing2" type="TextureRect" parent="Viewport"]
material = SubResource( 4 )
margin_right = 512.0
margin_bottom = 512.0
texture = ExtResource( 2 )
expand = true

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="ColorPickerButton" type="ColorPickerButton" parent="CanvasLayer"]
margin_left = 27.0
margin_top = 20.0
margin_right = 68.0
margin_bottom = 59.0

[node name="HSlider" type="HSlider" parent="CanvasLayer"]
margin_left = 89.0
margin_top = 19.0
margin_right = 289.0
margin_bottom = 68.0

[node name="Drawing3" type="TextureRect" parent="CanvasLayer"]
margin_right = 512.0
margin_bottom = 512.0
mouse_filter = 2
texture = ExtResource( 2 )
expand = true

[connection signal="color_changed" from="CanvasLayer/ColorPickerButton" to="." method="_on_ColorPickerButton_color_changed"]
[connection signal="value_changed" from="CanvasLayer/HSlider" to="." method="_on_HSlider_value_changed"]
